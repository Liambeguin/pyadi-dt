// SPDX-License-Identifier: GPL-2.0
// AUTOGENERATED BY PYADI-DT <date>
/*
 * Analog Devices AD9081-FMC-EBZ
 * https://wiki.analog.com/resources/eval/user-guides/quadmxfe/quick-start
 * https://wiki.analog.com/resources/tools-software/linux-drivers/iio-mxfe/ad9081
 *
 * hdl_project: <ad9081_fmca_ebz/zcu102>
 * board_revision: <>
 *
 * Copyright (C) 2021 Analog Devices Inc.
 */

#include "zynqmp-zcu102-rev10-ad9081.dts"

#define CDDC_I 0
#define CDDC_Q 1

&axi_ad9081_rx_jesd {
	clocks = <&zynqmp_clk 71>, <&hmc7044 10>, <&axi_ad9081_adxcvr_rx 1>, <&axi_ad9081_adxcvr_rx 0>;
	clock-names = "s_axi_aclk", "device_clk", "link_clk", "lane_clk";
};

&axi_ad9081_tx_jesd {
	clocks = <&zynqmp_clk 71>, <&hmc7044 6>, <&axi_ad9081_adxcvr_tx 1>, <&axi_ad9081_adxcvr_tx 0>;
	clock-names = "s_axi_aclk", "device_clk", "link_clk", "lane_clk";
};

&axi_ad9081_adxcvr_rx {
	adi,sys-clk-select = <{{fpga['fpga_adc']['sys_clk_select']}}>;
	adi,out-clk-select = <{{fpga['fpga_adc']['out_clk_select']}}>;
};

&axi_ad9081_adxcvr_tx {
	adi,sys-clk-select = <{{fpga['fpga_dac']['sys_clk_select']}}>;
	adi,out-clk-select = <{{fpga['fpga_dac']['out_clk_select']}}>;
};

//		&axi_ad9081_adxcvr_tx: axi-adxcvr-tx {
//			adi,sys-clk-select = <XCVR_QPLL>;
//			adi,out-clk-select = <XCVR_REFCLK_DIV2>;
//		};
//		&axi_ad9081_adxcvr_tx: axi-adxcvr-tx@84b60000 {
//			adi,sys-clk-select = <{{fpga['fpga_dac']['sys_clk_select']}}>;
//			adi,out-clk-select = <{{fpga['fpga_dac']['out_clk_select']}}>;
//		};

&spi1 {
	status = "okay";

	hmc7044: hmc7044@0 {
		#address-cells = <1>;
		#size-cells = <0>;
		#clock-cells = <1>;
		compatible = "adi,hmc7044";
		reg = <0>;
		spi-max-frequency = <1000000>;

		jesd204-device;
		#jesd204-cells = <2>;
		jesd204-sysref-provider;

		adi,jesd204-max-sysref-frequency-hz = <2000000>; /* 2 MHz */

		/*
		 * There are different versions of the AD9081-FMCA-EBZ & AD9082-FMCA-EBZ
		 * VCXO = 122.880 MHz, XO = 122.880MHz (AD9081-FMC-EBZ & AD9082-FMC-EBZ)
		 * VCXO = 100.000 MHz, XO = 100.000MHz (AD9081-FMC-EBZ-A2 & AD9082-FMC-EBZ-A2)
		 * To determine which board is which, read the freqency printed on the VCXO
		 * or use the fru-dump utility:
		 * #fru-dump -b /sys/bus/i2c/devices/15-0050/eeprom
		 */

		//adi,pll1-clkin-frequencies = <122880000 30720000 0 0>;
		//adi,vcxo-frequency = <122880000>;

		adi,pll1-clkin-frequencies = <{{ clock['clock']['vcxo'] }} 10000000 0 0>;
		adi,vcxo-frequency = <{{ clock['clock']['vcxo'] }}>;

		adi,pll1-loop-bandwidth-hz = <200>;

		adi,pll2-output-frequency = <{{ clock['clock']['vco'] }}>;

		adi,sysref-timer-divider = <1024>;
		adi,pulse-generator-mode = <0>;

		adi,clkin0-buffer-mode  = <0x07>;
		adi,clkin1-buffer-mode  = <0x07>;
		adi,oscin-buffer-mode = <0x15>;

		adi,gpi-controls = <0x00 0x00 0x00 0x00>;
		adi,gpo-controls = <0x37 0x33 0x00 0x00>;

		clock-output-names =
		"hmc7044_out0", "hmc7044_out1", "hmc7044_out2",
		"hmc7044_out3", "hmc7044_out4", "hmc7044_out5",
		"hmc7044_out6", "hmc7044_out7", "hmc7044_out8",
		"hmc7044_out9", "hmc7044_out10", "hmc7044_out11",
		"hmc7044_out12", "hmc7044_out13";

        {% for chan in clock['map'] %}
		hmc7044_c0{{ clock['map'][chan]['source_port'] }}:channel@{{ clock['map'][chan]['source_port'] }} {
			reg = <{{ clock['map'][chan]['source_port'] }}>;
			adi,extended-name = "{{ chan }}";
			adi,divider = <{{ clock['map'][chan]['divider'] }}>;
			adi,driver-mode = <HMC7044_DRIVER_MODE_LVDS>;
		};
        {% endfor %}

	};
};

&fmc_spi {

	trx0_ad9081: ad9081@0 {
		#address-cells = <1>;
		#size-cells = <0>;
		compatible = "adi,ad9081";
		reg = <0>;
		spi-max-frequency = <5000000>;

		/* Clocks */
		clocks = <&hmc7044 2>;
		clock-names = "dev_clk";

		clock-output-names = "rx_sampl_clk", "tx_sampl_clk";
		#clock-cells = <1>;

		jesd204-device;
		#jesd204-cells = <2>;
		jesd204-top-device = <0>; /* This is the TOP device */
		jesd204-link-ids = <FRAMER_LINK0_RX DEFRAMER_LINK0_TX>;
		jesd204-ignore-errors;//DEBUG ONLY REMOVE LATER!!

		jesd204-inputs =
			<&axi_ad9081_core_rx 0 FRAMER_LINK0_RX>,
			<&axi_ad9081_core_tx 0 DEFRAMER_LINK0_TX>;

		adi,tx-dacs {
			#size-cells = <0>;
			#address-cells = <1>;

			adi,dac-frequency-hz = /bits/ 64 <{{ dac['jesd']['converter_clock'] }}>;

			adi,main-data-paths {
				#address-cells = <1>;
				#size-cells = <0>;

				adi,interpolation = <{{ dac['datapath']['cduc']['interpolation'] }}>;

				{%- for ce in dac['datapath']['cduc']['enabled'] %}
				{% if ce %}
				ad9081_dac{{ loop.index0 }}: dac@{{ loop.index0 }} {
					reg = <{{ loop.index0 }}>;
					{%- if dac['fduc_enabled'] %}
					adi,crossbar-select = <{% for i in dac['datapath']['cduc']['sources'][loop.index0] %}&ad9081_tx_fddc_chan{{ i }}{{ ", " if not loop.last else "" }}{% endfor %}>;
					{%- endif %}
					adi,nco-frequency-shift-hz = /bits/ 64 <{{ dac['datapath']['fduc']['nco_frequencies'][loop.index0] }}>;
				};
				{%- endif %}
				{%- endfor %}

			};

			adi,channelizer-paths {
				#address-cells = <1>;
				#size-cells = <0>;
				adi,interpolation = <{{ dac['datapath']['fduc']['interpolation'] }}>;

				{%- if dac['fduc_enabled'] %}
				{%- for ce in dac['datapath']['fduc']['enabled'] %}
				{% if ce %}
				ad9081_tx_fddc_chan{{ loop.index0 }}: channel@{{ loop.index0 }} {
					reg = <{{ loop.index0 }}>;
					adi,gain = <2048>; /* 2048 * 10^(gain_dB/20) */
					adi,nco-frequency-shift-hz = /bits/ 64 <{{ dac['datapath']['fduc']['nco_frequencies'][loop.index0] }}>;
				};
				{%- endif %}
				{%- endfor %}
				{%- endif %}

			};

			adi,jesd-links {
				#size-cells = <0>;
				#address-cells = <1>;

				ad9081_tx_jesd_l0: link@0 {
					#address-cells = <1>;
					#size-cells = <0>;
					reg = <0>;

					adi,logical-lane-mapping = /bits/ 8 <0 2 7 7 1 7 7 3>;

					adi,link-mode = <{{ dac['jesd']['jesd_mode'] }}>;			/* JESD Quick Configuration Mode */
					adi,subclass = <1>;			/* JESD SUBCLASS 0,1,2 */
					adi,version = <{{ dac['jesd']['jesd_class_int'] }}>;			/* JESD VERSION 0=204A,1=204B,2=204C */
					adi,dual-link = <0>;			/* JESD Dual Link Mode */

					adi,converters-per-device = <{{ dac['jesd']['M'] }}>;	/* JESD M */
					adi,octets-per-frame = <{{ dac['jesd']['F'] }}>;		/* JESD F */

					adi,frames-per-multiframe = <{{ dac['jesd']['K'] }}>;	/* JESD K */
					adi,converter-resolution = <{{ dac['jesd']['Np'] }}>;	/* JESD N */
					adi,bits-per-sample = <{{ dac['jesd']['Np'] }}>;		/* JESD NP' */
					adi,control-bits-per-sample = <{{ dac['jesd']['CS'] }}>;	/* JESD CS */
					adi,lanes-per-device = <{{ dac['jesd']['L'] }}>;		/* JESD L */
					adi,samples-per-converter-per-frame = <{{ dac['jesd']['S'] }}>; /* JESD S */
					adi,high-density = <{{ dac['jesd']['HD'] }}>;			/* JESD HD */

					adi,tpl-phase-adjust = <13>;
				};
			};
		};

		adi,rx-adcs {
			#size-cells = <0>;
			#address-cells = <1>;

			adi,adc-frequency-hz = /bits/ 64 <{{ adc['jesd']['converter_clock'] }}>;

			adi,main-data-paths {
				#address-cells = <1>;
				#size-cells = <0>;


				{%- for ce in adc['datapath']['cddc']['enabled'] %}
				{% if ce %}
				ad9081_adc{{ loop.index0 }}:adc@{{ loop.index0 }} {
					reg = <{{ loop.index0 }}>;
					adi,decimation = <{{ adc['datapath']['cddc']['decimations'][loop.index0] }}>;
					adi,nco-frequency-shift-hz = /bits/ 64 <{{ adc['datapath']['cddc']['nco_frequencies'][loop.index0] }}>;
					adi,nco-mixer-mode = <AD9081_ADC_NCO_VIF>;
					//adi,crossbar-select = <&ad9081_rx_fddc_chan{{ loop.index0  }}>, <&ad9081_rx_fddc_chan{{ loop.index0 +2 }}>; /* Static for now */
				};
				{%- endif %}
				{%- endfor %}

			};

			adi,channelizer-paths {
				#address-cells = <1>;
				#size-cells = <0>;

				{%- if adc['fddc_enabled'] %}
				{%- for ce in adc['datapath']['fddc']['enabled'] %}
				{% if ce %}
				ad9081_rx_fddc_chan{{ loop.index0 }}:channel@{{ loop.index0 }} {
					reg = <{{ loop.index0 }}>;
					adi,decimation = <{{ adc['datapath']['fddc']['decimations'][loop.index0] }}>;
					adi,gain = <2048>; /* 2048 * 10^(gain_dB/20) */
					adi,nco-frequency-shift-hz = /bits/ 64 <{{ adc['datapath']['fddc']['nco_frequencies'][loop.index0] }}>;
				};
				{%- endif %}
				{%- endfor %}
				{%- endif %}
			};

			adi,jesd-links {
				#size-cells = <0>;
				#address-cells = <1>;

				ad9081_rx_jesd_l0: link@0 {
					reg = <0>;
					{%- if adc['fddc_enabled'] %}
					adi,converter-select =
					{%- for ce in adc['datapath']['fddc']['enabled'] %}
					{%- if ce %}
						<&ad9081_rx_fddc_chan{{ loop.index0 }} FDDC_I>, <&ad9081_rx_fddc_chan{{ loop.index0 }} FDDC_Q>{% if not loop.last %},{% endif %}
					{%- endif -%}
					{% if loop.last %};{% endif %}
					{%- endfor %}

					{%- else %}
					adi,converter-select =
					{%- for ce in adc['datapath']['cddc']['enabled'] %}
					{%- if ce %}
						<&ad9081_adc{{ loop.index0 }} CDDC_I>, <&ad9081_adc{{ loop.index0 }} CDDC_Q>{% if not loop.last %},{% endif %}
					{%- endif -%}
					{% if loop.last %};{% endif %}
					{%- endfor %}
					{% endif %}

					adi,logical-lane-mapping = /bits/ 8 <2 0 7 7 7 7 3 1>;

					adi,link-mode = <{{ adc['jesd']['jesd_mode'] }}>;			/* JESD Quick Configuration Mode */
					adi,subclass = <1>;			/* JESD SUBCLASS 0,1,2 */
					adi,version = <{{ adc['jesd']['jesd_class_int'] }}>;			/* JESD VERSION 0=204A,1=204B,2=204C */
					adi,dual-link = <0>;			/* JESD Dual Link Mode */

					adi,converters-per-device = <{{ adc['jesd']['M'] }}>;	/* JESD M */
					adi,octets-per-frame = <{{ adc['jesd']['F'] }}>;		/* JESD F */

					adi,frames-per-multiframe = <{{ adc['jesd']['K'] }}>;	/* JESD K */
					adi,converter-resolution = <{{ adc['jesd']['Np'] }}>;	/* JESD N */
					adi,bits-per-sample = <{{ adc['jesd']['Np'] }}>;		/* JESD NP' */
					adi,control-bits-per-sample = <{{ adc['jesd']['CS'] }}>;	/* JESD CS */
					adi,lanes-per-device = <{{ adc['jesd']['L'] }}>;		/* JESD L */
					adi,samples-per-converter-per-frame = <{{ adc['jesd']['S'] }}>; /* JESD S */
					adi,high-density = <{{ adc['jesd']['HD'] }}>;			/* JESD HD */
				};
			};
		};
	};
};

&axi_ad9081_core_tx {
	single-shot-output-gpios = <&gpio 139 0>;
};
